"use client";

import { motion, AnimatePresence } from "motion/react";
import { useEffect, useState, useRef } from "react";

interface TransitionProps {
  children: React.ReactNode;
}

export function Transition({ children }: TransitionProps) {
  const [isAnimating, setIsAnimating] = useState(true);
  const [videoEnded, setVideoEnded] = useState(false);
  const videoRef = useRef<HTMLVideoElement>(null);

  useEffect(() => {
    // Start playing the video when component mounts
    if (videoRef.current) {
      videoRef.current.play().catch((error) => {
        console.log("Video autoplay failed:", error);
        // Fallback: if video can't autoplay, show content after a delay
        setTimeout(() => setIsAnimating(false), 3000);
      });
    }
  }, []);

  const handleVideoEnded = () => {
    setVideoEnded(true);
    // Add a small delay before hiding the preloader
    setTimeout(() => setIsAnimating(false), 500);
  };

  const handleVideoError = () => {
    console.log("Video failed to load, showing content immediately");
    setIsAnimating(false);
  };

  return (
    <AnimatePresence>
      {isAnimating ? (
        <motion.div
          className="fixed inset-0 bg-background flex items-center justify-center z-50"
          initial={{ opacity: 1 }}
          exit={{
            opacity: 0,
            transition: {
              duration: 0.5,
              delay: 0.2,
            },
          }}
        >
          {/* Video Container */}
          <div className="relative w-full h-full flex items-center justify-center">
            <video
              ref={videoRef}
              className="w-full h-full object-cover contrast-200"
              onEnded={handleVideoEnded}
              onError={handleVideoError}
              muted
              playsInline
              preload="auto"
            >
              <source src="/preloader/video.mp4" type="video/mp4" />
              Your browser does not support the video tag.
            </video>

            {/* Overlay for better text visibility if needed */}
            <div className="absolute inset-0 bg-black/20" />

            {/* Loading text overlay */}
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.5, duration: 0.5 }}
              className="absolute bottom-8 left-1/2 transform -translate-x-1/2 text-center"
            >
              <motion.div
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.8, duration: 0.5 }}
                className="text-white text-sm font-light mb-2"
              >
                Loading your shopping experience...
              </motion.div>

              {/* Animated dots */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 1, duration: 0.5 }}
                className="flex justify-center gap-1"
              >
                {[0, 1, 2].map((index) => (
                  <motion.div
                    key={index}
                    className="w-2 h-2 bg-white rounded-full"
                    animate={{
                      scale: [1, 1.2, 1],
                      opacity: [0.5, 1, 0.5],
                    }}
                    transition={{
                      duration: 1.5,
                      repeat: Infinity,
                      delay: index * 0.2,
                    }}
                  />
                ))}
              </motion.div>
            </motion.div>

            {/* Skip button for better UX */}
            <motion.button
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 2, duration: 0.5 }}
              onClick={() => setIsAnimating(false)}
              className="absolute top-4 right-4 px-4 py-2 bg-white/20 backdrop-blur-sm text-white rounded-lg hover:bg-white/30 transition-all duration-200 text-sm font-medium"
            >
              Skip
            </motion.button>
          </div>
        </motion.div>
      ) : (
        <>{children}</>
      )}
    </AnimatePresence>
  );
}
